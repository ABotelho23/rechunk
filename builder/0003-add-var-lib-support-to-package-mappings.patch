From 28a14171357b53c1d42da088cd79204401cc90e5 Mon Sep 17 00:00:00 2001
From: antheas <git@antheas.dev>
Date: Sat, 22 Jun 2024 03:07:52 +0200
Subject: [PATCH 3/3] add var/lib support to package mappings

---
 rust/src/container.rs | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/rust/src/container.rs b/rust/src/container.rs
index 3d1c93cf..0d172579 100644
--- a/rust/src/container.rs
+++ b/rust/src/container.rs
@@ -390,7 +390,6 @@ pub fn container_encapsulate(args: Vec<String>) -> CxxResult<()> {
         let mut dir_cache: HashMap<Utf8PathBuf, ResolvedOstreePaths> = HashMap::new();
         for (nevra, pkgmeta) in package_meta.iter() {
             for path in pkgmeta.provided_paths()? {
-                let path = Utf8PathBuf::from(path);
                 if path.starts_with("/etc") || path.starts_with("/usr/etc") {
                     // Place all /etc files to the last layer.
                     // lib32 packages can contain the same etc file, 
@@ -402,6 +401,21 @@ pub fn container_encapsulate(args: Vec<String>) -> CxxResult<()> {
                     // and negligible compressed.
                     continue;
                 }
+                
+                let mut path = path;
+                if path.starts_with("/var/lib") {
+                    // var/lib files might not always be deterministic
+                    // but from comparing images built twice they seem to
+                    // be the same. rpm-ostree moves them to /usr/lib
+                    // The last layer can contain the following library folder:
+                    // 1.6G    ./usr/lib
+                    // Therefore, they are a large part of the image and
+                    // need to be part of the packages so they are not redownloaded
+                    // every time.
+                    // TODO: Bind to the beginning always.
+                    path = path.replace("/var/lib", "/usr/lib");
+                }
+                let path = Utf8PathBuf::from(path);
 
                 // Resolve the path to its ostree file
                 if let Some(ostree_paths) = fsutil::resolve_ostree_paths(
-- 
2.45.2

