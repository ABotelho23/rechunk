From 050916ee52a4e36422b750bbe97ed69c854ac9b2 Mon Sep 17 00:00:00 2001
From: antheas <git@antheas.dev>
Date: Sun, 30 Jun 2024 18:00:21 +0200
Subject: [PATCH 3/3] force ordering in internal mappings (does not seem to
 make a difference/remove)

---
 lib/Cargo.toml          | 1 +
 lib/src/chunking.rs     | 3 ++-
 lib/src/cli.rs          | 5 +++--
 lib/src/objectsource.rs | 5 +++--
 4 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/lib/Cargo.toml b/lib/Cargo.toml
index eb931d9..8218647 100644
--- a/lib/Cargo.toml
+++ b/lib/Cargo.toml
@@ -50,6 +50,7 @@ tokio-util = { features = ["io-util"], version = "0.7" }
 tokio-stream = { features = ["sync"], version = "0.1.8" }
 tracing = "0.1"
 zstd = { version = "0.13.1", features = ["pkg-config"] }
+indexmap = { version = "2.2.6", features = ["serde"] }
 
 indoc = { version = "2", optional = true }
 xshell = { version = "0.2", optional = true }
diff --git a/lib/src/chunking.rs b/lib/src/chunking.rs
index 17c470b..abe5f60 100644
--- a/lib/src/chunking.rs
+++ b/lib/src/chunking.rs
@@ -19,6 +19,7 @@ use camino::Utf8PathBuf;
 use containers_image_proxy::oci_spec;
 use gvariant::aligned_bytes::TryAsAligned;
 use gvariant::{Marker, Structure};
+use indexmap::IndexMap;
 use ostree::{gio, glib};
 use serde::{Deserialize, Serialize};
 
@@ -308,7 +309,7 @@ impl Chunking {
         }
 
         // Reverses `contentmeta.map` i.e. contentid -> Vec<checksum>
-        let mut rmap = BTreeMap::<ContentID, Vec<&String>>::new();
+        let mut rmap = IndexMap::<ContentID, Vec<&String>>::new();
         for (checksum, contentid) in meta.map.iter() {
             rmap.entry(Rc::clone(contentid)).or_default().push(checksum);
         }
diff --git a/lib/src/cli.rs b/lib/src/cli.rs
index 1d661cb..c55a4b1 100644
--- a/lib/src/cli.rs
+++ b/lib/src/cli.rs
@@ -12,6 +12,7 @@ use cap_std_ext::cap_std;
 use cap_std_ext::prelude::CapStdExtDirExt;
 use clap::{Parser, Subcommand};
 use fn_error_context::context;
+use indexmap::IndexMap;
 use io_lifetimes::AsFd;
 use ostree::{gio, glib};
 use std::borrow::Cow;
@@ -713,9 +714,9 @@ pub struct RawMeta {
     /// Top level labels, to be prefixed to the ones with --label
     pub labels: Option<BTreeMap<String, String>>,
     /// ContentId to layer annotation
-    pub layers: BTreeMap<String, String>,
+    pub layers: IndexMap<String, String>,
     /// OSTree hash to layer ContentId
-    pub mapping: BTreeMap<String, String>,
+    pub mapping: IndexMap<String, String>,
 }
 
 /// Export a container image with an encapsulated ostree commit.
diff --git a/lib/src/objectsource.rs b/lib/src/objectsource.rs
index 64a3eb1..95f8cf4 100644
--- a/lib/src/objectsource.rs
+++ b/lib/src/objectsource.rs
@@ -3,7 +3,8 @@
 //! This is used to help split up containers into distinct layers.
 
 use std::borrow::Borrow;
-use std::collections::{BTreeMap, HashSet};
+use std::collections::HashSet;
+use indexmap::IndexMap;
 use std::hash::Hash;
 use std::rc::Rc;
 
@@ -78,7 +79,7 @@ impl Borrow<str> for ObjectSourceMeta {
 pub type ObjectMetaSet = HashSet<ObjectSourceMeta>;
 
 /// Maps from an ostree content object digest to the `ContentSet` key.
-pub type ObjectMetaMap = BTreeMap<String, ContentID>;
+pub type ObjectMetaMap = IndexMap<String, ContentID>;
 
 /// Grouping of metadata about an object.
 #[derive(Debug, Default)]
-- 
2.45.2

