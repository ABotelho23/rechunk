From b928d4a78fb8cc2112304c7c8a506d4065af7760 Mon Sep 17 00:00:00 2001
From: antheas <git@antheas.dev>
Date: Mon, 24 Jun 2024 14:21:26 +0200
Subject: [PATCH] add contentmeta option

---
 lib/src/cli.rs | 47 +++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 47 insertions(+)

diff --git a/lib/src/cli.rs b/lib/src/cli.rs
index c9f91cb..98ae2ef 100644
--- a/lib/src/cli.rs
+++ b/lib/src/cli.rs
@@ -20,13 +20,17 @@ use std::ffi::OsString;
 use std::fs::File;
 use std::io::{BufReader, BufWriter, Write};
 use std::path::PathBuf;
+use std::collections::HashMap;
 use std::process::Command;
 use tokio::sync::mpsc::Receiver;
 
+use serde::{Deserialize, Serialize};
+use crate::chunking::ObjectMetaSized;
 use crate::commit::container_commit;
 use crate::container::store::{ExportToOCIOpts, ImportProgress, LayerProgress, PreparedImport};
 use crate::container::{self as ostree_container, ManifestDiff};
 use crate::container::{Config, ImageReference, OstreeImageReference};
+use crate::objectsource::{ObjectMeta, ObjectMetaSet};
 use crate::sysroot::SysrootLock;
 use ostree_container::store::{ImageImporter, PrepareResult};
 
@@ -165,6 +169,10 @@ pub(crate) enum ContainerOpts {
         /// Compress at the fastest level (e.g. gzip level 1)
         #[clap(long)]
         compression_fast: bool,
+
+        /// Path to a JSON-formatted content meta object.
+        #[clap(long)]
+        contentmeta: Option<Utf8PathBuf>,
     },
 
     /// Perform build-time checking and canonicalization.
@@ -699,6 +707,15 @@ async fn container_import(
     Ok(())
 }
 
+/// Grouping of metadata about an object.
+#[derive(Debug, Default, Serialize, Deserialize)]
+pub struct RawMeta {
+    /// The set of object sources with their metadata.
+    pub set: ObjectMetaSet,
+    /// Mapping from content object to source.
+    pub map: HashMap<String, String>,
+}
+
 /// Export a container image with an encapsulated ostree commit.
 #[allow(clippy::too_many_arguments)]
 async fn container_export(
@@ -712,6 +729,7 @@ async fn container_export(
     container_config: Option<Utf8PathBuf>,
     cmd: Option<Vec<String>>,
     compression_fast: bool,
+    contentmeta: Option<Utf8PathBuf>,
 ) -> Result<()> {
     let config = Config {
         labels: Some(labels),
@@ -722,12 +740,39 @@ async fn container_export(
     } else {
         None
     };
+    let contentmeta = if let Some(contentmeta) = contentmeta {
+        let raw: Option<RawMeta> = serde_json::from_reader(File::open(contentmeta).map(BufReader::new)?)?;
+        if let Some(raw) = raw {
+            let res = ObjectMetaSized::compute_sizes(repo, {
+                let mut map = BTreeMap::new();
+                for (k, v) in raw.map {
+                    map.insert(k, v.into());
+                }
+                ObjectMeta {
+                    set: raw.set,
+                    map,
+                }
+            });
+
+            match res {
+                Ok(meta) => Some(meta),
+                Err(e) => {
+                    anyhow::bail!("Error: {e}")
+                }
+            }
+        } else {
+            anyhow::bail!("Content metadata must be a JSON object")
+        }
+    } else {
+        None
+    };
     let opts = crate::container::ExportOpts {
         copy_meta_keys,
         copy_meta_opt_keys,
         container_config,
         authfile,
         skip_compression: compression_fast, // TODO rename this in the struct at the next semver break
+        contentmeta: contentmeta.as_ref(),
         ..Default::default()
     };
     let pushed = crate::container::encapsulate(repo, rev, &config, Some(opts), imgref).await?;
@@ -958,6 +1003,7 @@ async fn run_from_opt(opt: Opt) -> Result<()> {
                 config,
                 cmd,
                 compression_fast,
+                contentmeta,
             } => {
                 let labels: Result<BTreeMap<_, _>> = labels
                     .into_iter()
@@ -980,6 +1026,7 @@ async fn run_from_opt(opt: Opt) -> Result<()> {
                     config,
                     cmd,
                     compression_fast,
+                    contentmeta,
                 )
                 .await
             }
-- 
2.45.2

