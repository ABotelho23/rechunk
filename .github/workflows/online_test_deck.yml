# This workflow is for testing locally with act
# ./builder/prepare.sh
# export DOCKER_HOST='unix:///var/run/podman/podman.sock'
# sudo act -P ubuntu-latest=-self-hosted
name: Rechunk Github Tester (Deck)
on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'The ref tag to bundle'
        required: true
      prev:
        description: 'Use previous plan'
        type: boolean
        default: true
      latest:
        description: 'Use the tags latest/stable'
        type: boolean
        default: true
jobs:
  online_test_deck:
    permissions:
      packages: write

    runs-on: ubuntu-24.04
    steps:
      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | sudo podman login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Checkout last 300 commits (for <commits> to work)
        uses: actions/checkout@v4
        with:
          fetch-depth: 300
      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@v7
      - name: Download images (optional)
        run: |
          sudo podman pull ghcr.io/hhd-dev/rechunk:latest
          sudo podman pull ghcr.io/ublue-os/bazzite-deck:${{ github.event.inputs.ref }}
      - name: Run Rechunker
        id: rechunk
        uses: ./.
        with:
          ref: 'ghcr.io/ublue-os/bazzite-deck:${{ github.event.inputs.ref }}'
          prev-ref: ghcr.io/hhd-dev/bazzite-automated-deck:stable
          clear-plan: ${{ github.event.inputs.prev == 'true' && '' || '1' }}
          rechunk: 'ghcr.io/hhd-dev/rechunk:latest'
          version: 'rc${{ github.event.inputs.ref }}'
          revision: ${{ github.sha }}
          pretty: 'Rechunked (from ${{ github.event.inputs.ref }})'
          git: "${{ github.workspace }}"
          labels: |
            io.artifacthub.package.logo-url=https://raw.githubusercontent.com/ublue-os/bazzite/main/repo_content/logo.png
            io.artifacthub.package.readme-url=https://bazzite.gg/
            org.opencontainers.image.created=<timestamp>
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.source=https://github.com/ublue-os/bazzite
            org.opencontainers.image.title=bazzite
            org.opencontainers.image.url=https://github.com/ublue-os/bazzite
            
            org.universal-blue.pkg.kernel=<relver:kernel>
            org.universal-blue.pkg.gamescope=<relver:gamescope>
            org.universal-blue.pkg.kwayland=<version:kwayland>
            org.universal-blue.pkg.hhd=<version:hhd>
            org.universal-blue.pkg.adjustor=<version:adjustor>
            org.universal-blue.pkg.hhd-ui=<version:hhd-ui>
          description: >
            Bazzite Deck <pretty>
            [Kernel: <relver:kernel>,
            Gamescope: <relver:gamescope>,
            KDE: <version:kwayland>,
            HHD: <version:hhd>,
            Adjustor: <version:adjustor>,
            HHD-UI: <version:hhd-ui>]
          
          changelog: |
            Bazzite Deck <pretty>
            Version: <version>

            Major Components:
              - Kernel: <relver:kernel>
              - Gamescope: <relver:gamescope>
              - KDE: <version:kwayland>

            Handheld Daemon:
              - HHD: <version:hhd>
              - Adjustor: <version:adjustor>
              - HHD-UI: <version:hhd-ui>

            Changes since version <previous>:
            <commits>

            Package Changes:
            <pkgupd>

      - name: Upload Changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog.md
          path: ${{ steps.rechunk.outputs.changelog }}
          compression-level: 0

      - name: Upload Skopeo Manifest
        uses: actions/upload-artifact@v4
        with:
          name: manifest.json
          path: ${{ steps.rechunk.outputs.manifest }}
          compression-level: 0

      - name: Upload Image
        id: upload
        shell: bash
        run: |
          if [[ "${{ github.event.inputs.latest }}" == "true" ]]; then
            sudo skopeo copy ${{ steps.rechunk.outputs.ref }} docker://ghcr.io/hhd-dev/bazzite-automated-deck:latest
            sudo skopeo copy ${{ steps.rechunk.outputs.ref }} docker://ghcr.io/hhd-dev/bazzite-automated-deck:stable
          fi
          sudo skopeo copy ${{ steps.rechunk.outputs.ref }} docker://ghcr.io/hhd-dev/bazzite-automated-deck:${{ steps.rechunk.outputs.version }}
        