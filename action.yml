name: 'OCI ReChunker'
description: 'ReChunker allows you to repartition an existing OCI OS image into
  a set of equal-sized package bundles, or chunks. Between releases, only
  a subset of chunks are updated, reducing bandwidth use, and pulling is faster
  due to their larger number.'

inputs:
  ref:
    description: |
      The image reference that will be rechunked. Use any reference 
      that works under `podman create <ref>`.
    required: true
  prev-ref:
    description: |
      The previous image reference, if any. Used for versioning
      the current image and to avoid layer shifts (important; may be skipped).
  max-layers:
    description: |
      The number of layers (chunks) the output image will have.
  skip_compression:
    description: |
      Skip compression of the output image. Use only if you are
      recompressing the output (e.g., zstd:chunked). Saves 3-5min or 30% of runtime.
  labels:
    description: |
      The labels to apply to the output image, e.g.,
      `org.opencontainers.image.title=My Image`.
      Separate by newline.
  version:
    description: |
      The version of the image. Populates `org.opencontainers.image.version=<version>`.
      If the `prev-ref` image manifest contains the same version, this will be
      sufixed with .1, .2, etc.
      Use `<date>` for the current date in the format `YYMMDD` (240305).
      Example: `3.1_<date>` becomes `3.1_240305`.
    default: '<date>'
  rechunk:
    description: |
      The rechunker OCI image to use.
    default: 'ghcr.io/hhd-dev/rechunk:latest'
  keep-ref:
    description: |
      By default, this action will remove the ref image provided in `ref`.
      This variable will disable discarding it after the OSTree commit is created.
      May cause the storage overflow.

outputs:
  ref:
    description: |
      The reference of the rechunked image. Will be in the form of `oci:<dir>`,
      with dir being the directory of the OCI image, relative to workdir.
    value: ${{ steps.rechunk.outputs.ref }}
  version:
    description: |
      The version of the rechunked image to be used as a tag.
    value: ${{ steps.rechunk.outputs.version }}
  location:
    description: |
      The filesystem location of the rechunked image, so that it can be removed.
    value: ${{ steps.rechunk.outputs.location }}

runs:
  using: 'composite'
  steps:
    - name: Mount Image
      id: mount
      shell: bash
      run: |
        CREF=$(sudo podman create ${{ inputs.ref }} bash)
        MOUNT=$(sudo podman mount $CREF)
        echo "container=$CREF" >> $GITHUB_OUTPUT
        echo "mount=$MOUNT" >> $GITHUB_OUTPUT
    - name: Create OSTree Commit
      shell: bash
      run: |
        # Pruning
        echo Pruning
        sudo podman run --rm \
            -v "${{ steps.mount.outputs.mount }}":/var/tree \
            -e TREE=/var/tree \
            -u 0:0 \
            ${{ inputs.rechunk }} \
            /sources/rechunk/1_prune.sh
        
        # OSTree commit
        echo Committing to OSTree
        sudo podman run --rm \
            -v "${{ steps.mount.outputs.mount }}":/var/tree \
            -e TREE=/var/tree \
            -v "cache_ostree:/var/ostree" \
            -e REPO=/var/ostree/repo \
            -e RESET_TIMESTAMP=1 \
            -u 0:0 \
            ${{ inputs.rechunk }} \
            /sources/rechunk/2_create.sh

        # Cleanup and make space
        echo Unmounting and removing container
        sudo podman unmount ${{ steps.mount.outputs.container }}
        sudo podman rm ${{ steps.mount.outputs.container }}
        if [ -z "${{ inputs.keep-ref }}" ]; then
          sudo podman rmi ${{ inputs.ref }}
        fi
    - name: Rechunk OSTree Commit
      id: rechunk
      shell: bash
      run: |
        OUT_NAME=$(echo ${{ inputs.ref }} | rev | cut -d'/' -f1 | rev | sed 's/:/_/')
        
        sudo podman run --rm \
            -v "${{ github.workspace }}:/workspace" \
            -v "cache_ostree:/var/ostree" \
            -e REPO=/var/ostree/repo \
            -e MAX_LAYERS="${{ inputs.max-layers }}" \
            -e SKIP_COMPRESSION="${{ inputs.skip_compression }}" \
            -e PREV_REF="${{ inputs.prev-ref }}" \
            -e OUT_NAME="$OUT_NAME" \
            -e LABELS="${{ inputs.labels }}" \
            -e VERSION="${{ inputs.version }}" \
            -e VERSION_FN="/workspace/version.txt" \
            -e OUT_REF="oci:$OUT_NAME" \
            -u 0:0 \
            ${{ inputs.rechunk }} \
            /sources/rechunk/3_chunk.sh

        echo "version=$(sudo cat ${{ github.workspace }}/version.txt)" >> $GITHUB_OUTPUT
        echo "ref=oci:${{ github.workspace }}/$OUT_NAME" >> $GITHUB_OUTPUT
        echo "location=${{ github.workspace }}/$OUT_NAME" >> $GITHUB_OUTPUT

        # Remove root permissions
        sudo chown $(id -u):$(id -g) -R "${{ github.workspace }}/$OUT_NAME"

        # Remove cached OSTree volume
        sudo podman volume rm cache_ostree
        
        echo "Github Action output:"
        cat $GITHUB_OUTPUT